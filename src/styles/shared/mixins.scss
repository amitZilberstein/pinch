@import './variables.scss';

// Cols

@function colsL($colsNumber: 1) {
	@return ($colWidthLarge * $colsNumber);
}

@function cols($colsNumber: 1) {
	@return ($colWidth * $colsNumber);
}

@function colsM($colsNumber: 1) {
	@return ($colWidthMobile * $colsNumber);
}


// Ratios px to vw for

// 1600px - large
@function ratioL($multiplier: 1) {
	@return ($baseSizeLarge * $multiplier);
}

// 1440px - desktop
@function ratio($multiplier: 1) {
	@return ($baseSize * $multiplier);
}

// 562px - mobile
@function ratioM($multiplier: 1) {
	@return ($baseSizeMobile * $multiplier);
}


// Breakpoints

@mixin large {
	@media screen and (min-width: #{$large}) {
		@content;
	}
}

@mixin tabletP {
	@media screen and (max-width: #{$tabletP}) {
		@content;
	}
}

@mixin tabletL {
	@media screen and (max-width: #{$tabletP}) and (orientation: landscape) {
		@content;
	}
}

// Links hover
@mixin link {
	position: relative;
	&:after {
		position: absolute;
		content: '';
		width: 100%;
		height: ratio(0.1);
		bottom: 0;
		right: 0;
		background: $gradientToRight;
		transform-origin: right;
		transform: scaleX(0);
		transition: transform 1s $bezier2;
	}
	&:hover {
		&:after {
			transform-origin: left;
			transform: scaleX(1);
			transition: transform 0.6s $bezier2;
		}
	}
}


// Appears
@mixin appearFadeIn {
	opacity: 0;
	transition: opacity 0.8s $bezier2 0.5s;
	&.is-inview {
		opacity: 1;
	}
}

@mixin appearFadeInTranslate {
	will-change: transform, opacity;
	display: inline-block;
	transform: translate3d(0, 50%, 0);
	transition: transform 1s $bezier 0.5s, opacity 1s $bezier 0.5s;
	opacity: 0;
	&.is-inview {
		transform: none;
		opacity: 1;
	}
}

@mixin appearByLines {
	opacity: 0;
	.whitespace, .word {
		vertical-align: top;
	}
	.word {
		display: inline-block;
		overflow: hidden;
		will-change: transform;
		> span {
			display: block;
			transform: translate3d(0, 100%, 0);
			transition: transform 0.8s $bezier, opacity 0.8s $bezier;
		}
		@for $i from 0 through 20 {
			&.line-#{$i} > span {
				transition-delay: 0.25s + (0.125s * $i);
			}
		}
	}
	&.is-inview {
		opacity: 1;
		.word > span {
			transform: none;
			opacity: 1;
		}
	}
}